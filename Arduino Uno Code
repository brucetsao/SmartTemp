#include <Wire.h> 
#include <Adafruit_MCP23017.h> //using an adfruit display with buttons and I2C http://www.adafruit.com/products/772
#include <Adafruit_RGBLCDShield.h>

#define WHITE 0x7 // My lcd is only one color

Adafruit_RGBLCDShield lcd = Adafruit_RGBLCDShield(); //Adafruit code for lcd

float outSidetemp,tvRoomtemp,bedRoomtemp,basementtemp,temperatureDifference; // temperatures to display and use for relay trips recieved from remote sensors

unsigned long getTemperaturesTimer = millis();
unsigned long buttonTimer = millis();
unsigned long fanTripTimer = millis();

int fanStatus = 1; // Fan is ON equals 0, Fan is OFF equalls 1 
int fanON = 5; //degrees F between bedorrom and baseement that will trip the relay on this is selectable via select_menu
int fanOFF = 3; //degrees F between bedorrom and baseement that will trip the relay off is is already on this is selectable via select_menu
int fanMode = 1; //Auto = 1, Off = 3 or On = 2, used by fanTrip
int Menu = 0; //switch case for display_control
int mainMenu = 0;//switch case for mainMenu
int settingsMenu = 1;//switch case for settings_Menu

boolean select = false;  //buttons for menu control used by displayControl,mainMenu,settings_Menu
boolean up = false;
boolean down = false;
boolean left = false;
boolean right = false;

byte degree[8] = { // Special character degree symbol
  14,10,14,0,0,0,0
};

void setup() 
{
  //Serial.begin(9600); //debug
  lcd.begin(16, 2); 
  lcd.print("Winter is Coming");
  lcd.createChar(0, degree);// creating the degree symbol
  delay(1000);
  lcd.clear();
  lcd.setBacklight(WHITE);// turn back light on
}

uint8_t i=0; //statement from Adafruit 
void loop() 
{
  buttonCheck(); // check for button presses  
  displayControl(); // display information, temperature by defualt, buttons change what is displayed
  getTemperatures(); // get the temps from the remote sensors 
  fanTrip(); //should the fan/relay turn on or off
}

void displayControl()
{
  if (select == true) //listening for select button push to change switch case
  { 
    Menu++; 
    select = false;
  }
  if (Menu >= 2)
  {
    Menu=0;
  }
  
  switch (Menu)
  { 
  case 0:
    main_Menu(); //menu that display temperatures,status and temperature difference
    break;

  case 1:
   settings_Menu();// menu to change the settings, including auto/off/on and the temperatures that trip the relay/fan
    break;
  }
}

void main_Menu()//listening for button presses to change what is displayed
{
  if (left != right) // this alows left or right button to be his in any order and still have the correct switch case
  {
    mainMenu = 1;  
  }
  else
  {
    mainMenu = 0;  
  }

  if (down == true)
  {
    mainMenu = 2;  
  }
  
   if (up == true)
  {
    mainMenu = 3; 
  }

  switch (mainMenu)
  {
  case 0: //display temperatures
    
    displayTVroom(); 
    displayOutside();
    break;

  case 1: //display second set of temperatures
    
    displayBedroom(); 
    displayBasement(); 
    break; 

  case 2: // display temperatureDifference usefull for know how to adjust trip settings 
    lcd.setCursor(0,0); 
    lcd.print("Temp Difference");
    lcd.setCursor(5,1);
    lcd.print(temperatureDifference);
    lcd.print((char)0);
    lcd.print("F");
    lcd.print("     ");


    if (down == true)
    {
      mainMenu = 0;
    }
    break;
    
  case 3:// curent status of on/off/auto and current fan/relay status
  lcd.setCursor(0,0); 
  lcd.print("Fan Mode: ");
  if (fanMode == 1)
  {
  lcd.print("  Auto");
  }
   if (fanMode == 2)
  {
  lcd.print("    On");
  }
  
   if (fanMode == 3)
  {
  lcd.print("   Off");
  }
  
  lcd.setCursor(0,1);
  lcd.print("Fan Status: ");
  if (fanStatus == 0)
  { 
    lcd.print("  On");
  }
   if (fanStatus == 1)
  { 
    lcd.print(" Off");
  }
  break;
  }
}

//below I broke the diplay of temperatureDifference into function to make them easier to work with 
void displayTVroom()
{
  lcd.setCursor(0, 0);
  lcd.print("TV Room ");
  lcd.print (tvRoomtemp);
  lcd.print((char)0);
  lcd.print("F");
}

void displayOutside()
{
  lcd.setCursor(0, 1);
  lcd.print("Outside ");
  lcd.print (outSidetemp); 
  lcd.print((char)0);
  lcd.print("F");

}

void displayBedroom()
{
  lcd.setCursor(0, 0);
  lcd.print("Bed Room "); 
  lcd.print (bedRoomtemp);
  lcd.print((char)0);
  lcd.print("F");
}

void displayBasement()
{
  lcd.setCursor(0, 1);
  lcd.print("Basement ");
  lcd.print (basementtemp);
  lcd.print((char)0);
  lcd.print("F");
}

void settings_Menu() // menu to change settings 
{
  if (settingsMenu == 0) //listening for button presses
  {
    settingsMenu = 3;
  }
  if (settingsMenu == 4)
  {
    settingsMenu = 1;
  }

  if (left == true)
  {
    settingsMenu--;
    left=false;

  }
  if (right == true)
  {
    settingsMenu++;
    right=false;
  }


  switch (settingsMenu)
  {
  case 1: //menu to change fan/relay mode auto/off/on
    lcd.setCursor(4,0);
    lcd.print("Fan Mode");

    if (down == true)
    {
      fanMode--;
      down=false;
      if (fanMode ==0 )
      {
        fanMode = 3;
      }
    }
    if (up == true)
    {
      fanMode++;
      up=false;
      if (fanMode==4)
      {
        fanMode = 1;
      }
    }
    if (fanMode == 1)
    { 
      lcd.setCursor(6,1);
      lcd.print("Auto");
    }
    if (fanMode == 2)
    { 
      lcd.setCursor(7,1);
      lcd.print("On");
    }
    if (fanMode == 3)
    { 
      lcd.setCursor(6,1);
      lcd.print("Off");
    }
    break; 

  case 2: //menu to change what temperature the fan/relay trips on
    lcd.setCursor(2,0);
    lcd.print("FAN TRIP ON");
    lcd.setCursor(7, 1);
    lcd.print(fanON);
    lcd.print((char)0);
    lcd.print("F");
    if (down == true)
    {

      fanON--;
      down=false;
      if (fanON ==0 )
      {
        fanON = 9;
      }
    }
    if (up == true)
    {
      fanON++;
      Serial.print(fanON);
      up=false;
      if (fanON==10)
      {
        fanON = 1;
      }
    }
    break;

  case 3: //menu to change the temperature that the fan/relay trips off if already on
    lcd.setCursor(2, 0);
    lcd.print("FAN TRIP OFF");
    lcd.setCursor(7, 1);
    lcd.print(fanOFF);
    lcd.print((char)0);
    lcd.print("F");

    if (down == true)
    {
      fanOFF--;
      down=false;
      if (fanOFF ==0 )
      {
        fanOFF = 9;
      }
    }
    if (up == true)
    { 
      fanOFF++;
      up=false;
      if (fanOFF==10)
      {
        fanOFF = 1;
      }
    }
    break;
  }
}

void fanTrip()
{ 
  temperatureDifference = (bedRoomtemp-basementtemp); // temperature I want to reduce by turning on fan/relay and blowing up cool air to bedroom 

  switch (fanMode)

  {
  case 1: //Fan mode Auto
    
    if(millis()- fanTripTimer > 500) // check every so often to see if the fan/relay needs to turn on/off, //delay a bit to prevent constant on/off if something goes wrong
    {
      if (fanStatus == 1)                  
      {   
        fanTrip1();
        fanTripTimer = millis();
      }
      if(fanStatus == 0)
      { 
        fanTripTimer = millis();
        fanTrip2();
      }
    }
    break;
  case 2: //fan mode on

    Wire.beginTransmission(37);
    Wire.write(0); 
    Wire.endTransmission();
    my_delay(5);
    fanStatus = 0; 
    fanTripTimer = millis()+299500; //shortens the time that auto mode will check when swithcing back to auto
    //Serial.println ("ON");
    break;


  case 3://fan mode off

    Wire.beginTransmission(37);
    Wire.write(1); 
    Wire.endTransmission();
    fanStatus = 1; 
    //Serial.println ("OFF");
    fanTripTimer = millis()+299500; //shortens the time that auto mode will check when swithcing back to auto
    my_delay(5);
    break; 
  }
}

void fanTrip1() //triping the fan/relay on from off state
{ 
  if (temperatureDifference > fanON)
  {
    Wire.beginTransmission(37); //37 is the addres for the attiny85 controling the relay/fan
    Wire.write(0); 
    Wire.endTransmission();
    my_delay(5);
    fanStatus = 0; //fan is on
  }
  else
  {
    Wire.beginTransmission(37);
    Wire.write(1); 
    Wire.endTransmission();
    my_delay(5);  
    fanStatus = 1; //fan is off  
  }
}

void fanTrip2() //triping the fan/relay off from on state
{ 

  if (temperatureDifference < fanOFF)
  {
    Wire.beginTransmission(37);
    Wire.write(1); 
    Wire.endTransmission();
    my_delay(5);
    fanStatus = 1; //fan is off
  }
  else
  {
    Wire.beginTransmission(37);
    Wire.write(0); 
    Wire.endTransmission();
    my_delay(5);  
    fanStatus = 0; //fan is on
  }
}

void getTemperatures() 
{
  if(millis()- getTemperaturesTimer > 2000) //get temperacstures every so often
  {
    bedRoom();
    my_delay(50);
    outSide();
    my_delay(50);
    basement();
    my_delay(50);
    tvRoom();
    getTemperaturesTimer = millis();
  }
}
//recieving the temperatures from the slave attiny85 
void bedRoom ()
{ 
  byte hb; 
  byte lb;
  Wire.requestFrom(40 ,2); 
  if (Wire.available()) 
  {
    lb=Wire.read();
    hb=Wire.read();
  }
  int temp =word(hb,lb);
  bedRoomtemp = (temp *.01); //multipled the float by 100 on the slave side to avoid sending a float
}

void outSide ()
{
  byte hb;
  byte lb;
  Wire.requestFrom(41 ,2); 
  if (Wire.available()) 
  {
    lb=Wire.read();
    hb=Wire.read();
  }
  int temp =word(hb,lb);
  outSidetemp = (temp *.01);
}

void basement()
{ 
  byte hb;
  byte lb;
  Wire.requestFrom(38 ,2); 
  if (Wire.available()) 
  {
    lb=Wire.read();
    hb=Wire.read();
  }
  int temp =word(hb,lb);
  basementtemp = (temp *.01);
}

void tvRoom()
{
  byte hb;
  byte lb;
  Wire.requestFrom(39 ,2); 
  if (Wire.available()) 
  {
    lb=Wire.read();
    hb=Wire.read();
  }
  int temp =word(hb,lb);
  tvRoomtemp = (temp *.01);
}

void buttonCheck() //checking for button presses most of this code is from Adafruit
{
  uint8_t buttons = lcd.readButtons();
  
  if(millis()- buttonTimer > 300)
  {
    Serial.println("BC");


    if (buttons) {
      if (buttons & BUTTON_SELECT) 
      { 
        select = !  select;
        lcd.setCursor(15, 1); 
        lcd.clear();
      }
      if (buttons & BUTTON_UP) 
      {
        up = ! up;
        lcd.setCursor(15, 1);
        lcd.clear(); 
      }
      if (buttons & BUTTON_DOWN) 
      {
        down = ! down ;
        lcd.setCursor(15, 1);
        lcd.clear(); 
      }
      if (buttons & BUTTON_LEFT) 
      {
        left = ! left;
        lcd.setCursor(15, 1); 
        lcd.clear();
      }
      if (buttons & BUTTON_RIGHT) 
      {
        right = ! right;
        lcd.setCursor(15, 1); 
        lcd.clear();
      }buttonTimer=millis();
    }
  } 
}

void my_delay(unsigned long duration) //avoiding the delay command
{
  for (unsigned long start = millis(); millis() < (start + duration); );
}
